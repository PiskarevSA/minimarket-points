// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: create_transaction.sql

package postgresql

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createTransaction = `-- name: CreateTransaction :exec
WITH next_tx_id AS (
    INSERT INTO transaction_counter (
        user_id,
        counter
    )
    VALUES (
        $1::UUID,
        1
    )
    ON CONFLICT (user_id) DO UPDATE
    SET counter = transaction_counter.counter + 1
    RETURNING counter AS id
)
INSERT INTO transactions (
    id,
    user_id,
    order_number,
    operation,
    amount,
    timestamp
)
SELECT
    next_tx_id.id,
    $1,
    $2,
    $3,
    $4,
    $5
FROM next_tx_id
`

type CreateTransactionParams struct {
	UserId      uuid.UUID
	OrderNumber pgtype.Text
	Operation   string
	Amount      pgtype.Numeric
	Timestamp   time.Time
}

func (q *Queries) CreateTransaction(ctx context.Context, arg CreateTransactionParams) error {
	_, err := q.db.Exec(ctx, createTransaction,
		arg.UserId,
		arg.OrderNumber,
		arg.Operation,
		arg.Amount,
		arg.Timestamp,
	)
	return err
}
