// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_balance.sql

package postgresql

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const getBalance = `-- name: GetBalance :one
SELECT
    available,
    withdrawn,
    updated_at
FROM balances
WHERE user_id = $1
`

type GetBalanceRow struct {
	Available pgtype.Numeric
	Withdrawn pgtype.Numeric
	UpdatedAt time.Time
}

func (q *Queries) GetBalance(ctx context.Context, userID uuid.UUID) (GetBalanceRow, error) {
	row := q.db.QueryRow(ctx, getBalance, userID)
	var i GetBalanceRow
	err := row.Scan(&i.Available, &i.Withdrawn, &i.UpdatedAt)
	return i, err
}
